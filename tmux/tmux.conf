# tmux display things in 256 colors
set -g default-terminal "tmux-256color"

# change prefix to Ctrl-s
set -g prefix C-s

set -g allow-passthrough on

set-option -a terminal-features 'screen-256color:RGB'
# set-option -g default-terminal "screen-256color"
set-option -a terminal-overrides "screen-256color:Tc"

set-option -g focus-events on

# scroll history
set -g history-limit 999999999

# show messages for 4 seconds instead
set -g display-time 4000

# automatically renumber tmux windows
set -g renumber-windows on

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
# set-window-option -g automatic-rename on

# don't rename windows automatically
set-option -g allow-rename off

######################
#### Key Bindings ####
######################

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

set-option -g repeat-time 0

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
#
# # decide whether we're in a Vim process
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# # bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

set-window-option -g xterm-keys on

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# split window and fix path for tmux 1.9
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

# enable mouse support for switching panes/windows
set -g mouse on
# bind -t emacs-copy 'p' scroll-up
# bind -t emacs-copy 'n' scroll-down
# bind -t emacs-copy 'i' scroll-up
# bind -t emacs-copy 'k' scroll-down

# word separators
set -g word-separators " |{}()[]<>`='\"!@#$%^&*:;,?"

# set vi mode for copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
# bind -T copy-mode-vi v send -X begin-selection

unbind -T copy-mode-vi MouseDragEnd1Pane


if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

source ~/.dotfiles/tmux/base16.sh

# create tmux folder if doesn't exist
if "test ! -d ~/.tmux/plugins" \
    " run 'mkdir -p ~/.tmux/plugins'"

if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin 'catppuccin/tmux#v2.1.0'
set -g @catppuccin_flavor 'mocha'
set -g @catppuccin_window_status_style "rounded"

# Load catppuccin
run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -agF status-right "#{E:@catppuccin_status_cpu}"
set -ag status-right "#{E:@catppuccin_status_uptime}"
set -agF status-right "#{E:@catppuccin_status_weather}"
set -agF status-right "#{E:@catppuccin_status_battery}"

set-option -g status-position top

# tmux plug manager
# TODO: automate mkdir -p .tmux/plugins/tpm && git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# TODO: automate plugins install, check the repo https://github.com/tmux-plugins/tpm
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-ressurect' # restore tmux session after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically save the sessions every 15 min

set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'xamut/tmux-weather'
set -g @plugin 'omerxx/tmux-floax'

set -g @resurrect-capture-pane-contens 'on'
set -g @continuum-restore 'on'

# fix the error "return 1"
set-environment -g PATH "$PATH:/opt/homebrew/bin"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

